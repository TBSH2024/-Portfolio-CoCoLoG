FROM php:8.3-fpm-alpine

RUN apk update --no-cache

RUN apk add --no-cache --virtual .build-deps $PHPIZE_DEPS

RUN apk add --no-cache curl zlib-dev openssl \
    bash nodejs npm nginx supervisor php83-pgsql libpq-dev

RUN docker-php-ext-install pdo_pgsql

RUN apk del .build-deps
RUN apk cache clean

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy config files to proper locations
COPY .fly/nginx/default.conf /etc/nginx/http.d/default.conf
COPY .fly/supervisor/ /etc/supervisor/
COPY .fly/entrypoint.sh /entrypoint
COPY .fly/scripts/ /var/www/html/.fly/scripts/
COPY .fly/start-nginx.sh /usr/local/bin/start-nginx
RUN chmod +x /usr/local/bin/start-nginx \
    && chmod +x /entrypoint

RUN mkdir -p /run/supervisor && \
    mkdir -p /var/log/supervisor

COPY ./src/ /var/www/html
WORKDIR /var/www/html

RUN sed -i '/->withMiddleware(function (Middleware $middleware) {/a \
        $middleware->trustProxies(at: "*"); \
    ' /var/www/html/bootstrap/app.php

RUN composer install --optimize-autoloader --no-dev --prefer-dist
RUN npm install && npm run build

# Permission changes
RUN chown -R www-data:www-data storage bootstrap/cache public && \
    find storage bootstrap/cache -type d -exec chmod 775 {} \; && \
    find storage bootstrap/cache -type f -exec chmod 664 {} \;

# Expose port 8080
EXPOSE 8080

ENTRYPOINT ["/entrypoint"]